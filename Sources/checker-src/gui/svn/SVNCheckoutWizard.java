/**
 * 
 *   Copyright (C) 2008 Lasse Parikka
 *
 *   This program is free software; you can redistribute it and/or modify it under the terms of
 *   the GNU General Public License as published by the Free Software Foundation; either version 2
 *   of the License, or (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 *   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 *   See the GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License along with this program;
 *   if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 *   MA 02111-1307 USA
 *
 *   Also add information on how to contact you by electronic and paper mail.
 *
 */
package checker.gui.svn;


import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import org.jdesktop.swingworker.SwingWorker;

import checker.repository.SVNRepositoryPackage;
import checker.localization.Locale;

/**
 * Shows checkout wizard, performs the checkout.
 */
public class SVNCheckoutWizard extends javax.swing.JDialog
	implements KeyListener{

    private SVNRepositoryPackage svnPackage;
	
    private SVNDirSelector tree;
	
    private OpenRepositoryTask openTask;
	
    private boolean isCancelled;
    
    /* Localization */
    private Locale loc = new Locale();

  
	
	/** Creates new form SVNCheckoutWizard */
    public SVNCheckoutWizard(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        svnPackage = new SVNRepositoryPackage();
        isCancelled = true;
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        step1 = new javax.swing.JPanel();
        step1TopPanel = new javax.swing.JPanel();
        step1Separator1 = new javax.swing.JSeparator();
        step1Desc = new javax.swing.JLabel();
        step1CenterPanel = new javax.swing.JPanel();
        step1Desc2 = new javax.swing.JLabel();
        urlBox = new javax.swing.JComboBox();
        urlLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        step1Desc3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        accessDescLabel = new javax.swing.JLabel();
        stopButton = new javax.swing.JButton();
        connectionDesc = new javax.swing.JLabel();
        step1BottomPanel = new javax.swing.JPanel();
        step1Separator2 = new javax.swing.JSeparator();
        helpButton1 = new javax.swing.JButton();
        cancelButton1 = new javax.swing.JButton();
        finishButton1 = new javax.swing.JButton();
        nextButton1 = new javax.swing.JButton();
        backButton1 = new javax.swing.JButton();
        step2 = new javax.swing.JPanel();
        step2TopPanel = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        step2Desc = new javax.swing.JLabel();
        step2CenterPanel = new javax.swing.JPanel();
        step2Desc2 = new javax.swing.JLabel();
        repositoryPathLabel = new javax.swing.JLabel();
        repositoryPathField = new javax.swing.JTextField();
        revisionLabel = new javax.swing.JLabel();
        localPathLabel = new javax.swing.JLabel();
        browseButton1 = new javax.swing.JButton();
        revisionField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        localPathField = new javax.swing.JTextField();
        browseButton2 = new javax.swing.JButton();
        step2Desc3 = new javax.swing.JLabel();
        revisionFieldDesc = new javax.swing.JLabel();
        step2BottomPanel = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        helpButton2 = new javax.swing.JButton();
        cancelButton2 = new javax.swing.JButton();
        finishButton2 = new javax.swing.JButton();
        nextButton2 = new javax.swing.JButton();
        backButton2 = new javax.swing.JButton();
        popup = new javax.swing.JPopupMenu();
        popupListener = new PopupListener();
        
        selectAllItem = new javax.swing.JMenuItem(loc.lc("Select All"));
        selectAllItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(
                KeyEvent.VK_A, java.awt.event.ActionEvent.CTRL_MASK));
        
        selectAllItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllItemActionPerformed(evt);
            }
        });
        
       
        copyItem = new javax.swing.JMenuItem(loc.lc("Copy"));
        copyItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(
                KeyEvent.VK_C, java.awt.event.ActionEvent.CTRL_MASK));
        copyItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyItemActionPerformed(evt);
            }
        });
        
      
        
        pasteItem = new javax.swing.JMenuItem(loc.lc("Paste"));
        pasteItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(
                KeyEvent.VK_V, java.awt.event.ActionEvent.CTRL_MASK));
        
        pasteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteItemActionPerformed(evt);
            }
        });

      
        popup.add(copyItem);
        popup.add(pasteItem);
        popup.add(selectAllItem);
        
        copyItem.setFont(popup.getFont().deriveFont(popup.getFont().getStyle() & ~java.awt.Font.BOLD));
        pasteItem.setFont(popup.getFont().deriveFont(popup.getFont().getStyle() & ~java.awt.Font.BOLD));
        selectAllItem.setFont(popup.getFont().deriveFont(popup.getFont().getStyle() & ~java.awt.Font.BOLD));
        
      
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());
        editorcomp = new javax.swing.JTextField();
        editorcomp = (JTextField) urlBox.getEditor().getEditorComponent();
        editorcomp.addKeyListener(this);
        
        editorcomp.addMouseListener(popupListener);
        jProgressBar1.setVisible(false);
        stopButton.setVisible(false);
    
      
        step1Desc.setFont(step1Desc.getFont().deriveFont(step1Desc.getFont().getStyle() | java.awt.Font.BOLD));
        step1Desc.setText(loc.lc("Subversion repository"));

        org.jdesktop.layout.GroupLayout step1TopPanelLayout = new org.jdesktop.layout.GroupLayout(step1TopPanel);
        step1TopPanel.setLayout(step1TopPanelLayout);
        step1TopPanelLayout.setHorizontalGroup(
            step1TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step1TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(step1Desc)
                .addContainerGap(477, Short.MAX_VALUE))
            .add(step1Separator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
        );
        step1TopPanelLayout.setVerticalGroup(
            step1TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step1TopPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(step1Desc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step1Separator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        step1Desc2.setFont(step1Desc2.getFont().deriveFont(step1Desc2.getFont().getStyle() & ~java.awt.Font.BOLD));
        step1Desc2.setText(loc.lc("Specify the location of Subversion repository."));

        
       
        urlBox.setEditable(true);
        
        urlBox.setFont(urlBox.getFont().deriveFont(urlBox.getFont().getStyle() & ~java.awt.Font.BOLD));
        urlBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "http://", "https://", "svn://", "svn+ssh://", "file:///" }));
        urlBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                urlBoxItemStateChanged(evt);
            }
        });
        
      
      

        urlLabel.setFont(urlLabel.getFont().deriveFont(urlLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        urlLabel.setText(loc.lc("Repository URL") + ":");

        usernameField.setText("");
        usernameField.setPreferredSize(new java.awt.Dimension(69, 24));

        passwordField.setText("");
        passwordField.setPreferredSize(new java.awt.Dimension(109, 24));

        usernameLabel.setFont(usernameLabel.getFont().deriveFont(usernameLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        usernameLabel.setText(loc.lc("Username") + ":");

        passwordLabel.setFont(passwordLabel.getFont().deriveFont(passwordLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        passwordLabel.setText(loc.lc("Password") + ":");

        step1Desc3.setFont(step1Desc3.getFont().deriveFont(step1Desc3.getFont().getStyle() & ~java.awt.Font.BOLD, step1Desc3.getFont().getSize()-1));
        step1Desc3.setText(loc.lc("(empty means anonymous access)"));

        stopButton.setText(loc.lc("Stop"));
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });
        
        connectionDesc.setFont(connectionDesc.getFont().deriveFont(connectionDesc.getFont().getStyle() & ~java.awt.Font.BOLD));
        connectionDesc.setText(loc.lc("Connecting to Subversion repository..."));
        connectionDesc.setVisible(false);
        accessDescLabel.setFont(accessDescLabel.getFont().deriveFont(accessDescLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        accessDescLabel.setText(loc.lc("http://hostname/repository_path"));

        org.jdesktop.layout.GroupLayout step1CenterPanelLayout = new org.jdesktop.layout.GroupLayout(step1CenterPanel);
        step1CenterPanel.setLayout(step1CenterPanelLayout);
        step1CenterPanelLayout.setHorizontalGroup(
            step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step1CenterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(step1Desc2)
                    .add(step1CenterPanelLayout.createSequentialGroup()
                        .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(urlLabel)
                            .add(usernameLabel)
                            .add(passwordLabel))
                        .add(26, 26, 26)
                        .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(step1CenterPanelLayout.createSequentialGroup()
                                .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 332, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(connectionDesc))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(stopButton))
                            .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(urlBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 427, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, step1CenterPanelLayout.createSequentialGroup()
                                    .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, passwordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, usernameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(step1Desc3))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, accessDescLabel)))))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        step1CenterPanelLayout.setVerticalGroup(
            step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step1CenterPanelLayout.createSequentialGroup()
                .add(step1Desc2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(urlLabel)
                    .add(urlBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(accessDescLabel)
                .add(15, 15, 15)
                .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(step1CenterPanelLayout.createSequentialGroup()
                        .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(usernameLabel)
                            .add(usernameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(step1Desc3))
                        .add(18, 18, 18)
                        .add(passwordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(step1CenterPanelLayout.createSequentialGroup()
                        .add(42, 42, 42)
                        .add(passwordLabel)))
                .add(50, 50, 50)
                .add(step1CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, step1CenterPanelLayout.createSequentialGroup()
                        .add(connectionDesc)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, stopButton)))
        );

        helpButton1.setText(loc.lc("Help"));
        //helpButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        helpButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButton1ActionPerformed(evt);
            }
        });

        cancelButton1.setText(loc.lc("Cancel"));
        cancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton1ActionPerformed(evt);
            }
        });

        finishButton1.setText(loc.lc("Finish"));
        finishButton1.setEnabled(false);
        //finishButton1.setPreferredSize(new java.awt.Dimension(75, 25));

        nextButton1.setText(loc.lc("Next"));
        //nextButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        nextButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton1ActionPerformed(evt);
            }
        });

        backButton1.setText(loc.lc("Back"));
        backButton1.setEnabled(false);
        //backButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout step1BottomPanelLayout = new org.jdesktop.layout.GroupLayout(step1BottomPanel);
        step1BottomPanel.setLayout(step1BottomPanelLayout);
        step1BottomPanelLayout.setHorizontalGroup(
            step1BottomPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, step1Separator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, step1BottomPanelLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .add(backButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nextButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(finishButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancelButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(helpButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        step1BottomPanelLayout.setVerticalGroup(
            step1BottomPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step1BottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(step1Separator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step1BottomPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(helpButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cancelButton1)
                    .add(finishButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nextButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(backButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout step1Layout = new org.jdesktop.layout.GroupLayout(step1);
        step1.setLayout(step1Layout);
        step1Layout.setHorizontalGroup(
            step1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step1BottomPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(step1TopPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(step1CenterPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        step1Layout.setVerticalGroup(
            step1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, step1Layout.createSequentialGroup()
                .add(step1TopPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step1CenterPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step1BottomPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(step1, "step1card");

        step2Desc.setFont(step2Desc.getFont().deriveFont(step2Desc.getFont().getStyle() | java.awt.Font.BOLD));
        step2Desc.setText(loc.lc("Folder(s) to checkout"));

        org.jdesktop.layout.GroupLayout step2TopPanelLayout = new org.jdesktop.layout.GroupLayout(step2TopPanel);
        step2TopPanel.setLayout(step2TopPanelLayout);
        step2TopPanelLayout.setHorizontalGroup(
            step2TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step2TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(step2Desc)
                .addContainerGap(483, Short.MAX_VALUE))
            .add(jSeparator3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
        );
        step2TopPanelLayout.setVerticalGroup(
            step2TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step2TopPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(step2Desc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        step2Desc2.setFont(step2Desc2.getFont().deriveFont(step2Desc2.getFont().getStyle() & ~java.awt.Font.BOLD));
        step2Desc2.setText(loc.lc("Specify the folder to checkout from Subversion repository."));
        getRootPane().setDefaultButton(nextButton1);

        repositoryPathLabel.setFont(repositoryPathLabel.getFont().deriveFont(repositoryPathLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        repositoryPathLabel.setText(loc.lc("Repository Folder(s)") + ":");

        repositoryPathField.setText("jTextField1");
        repositoryPathField.setPreferredSize(new java.awt.Dimension(69, 24));

        revisionLabel.setFont(revisionLabel.getFont().deriveFont(revisionLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        revisionLabel.setText(loc.lc("Repository revision") + ":");

        localPathLabel.setFont(localPathLabel.getFont().deriveFont(localPathLabel.getFont().getStyle() & ~java.awt.Font.BOLD));
        localPathLabel.setText(loc.lc("Local Folder") + ":");

        browseButton1.setText(loc.lc("Browse"));
        //browseButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        browseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButton1ActionPerformed(evt);
            }
        });

        revisionField.setText("");
        revisionField.setEnabled(false);
        revisionField.setPreferredSize(new java.awt.Dimension(69, 24));

        searchButton.setText(loc.lc("Search"));
        searchButton.setEnabled(false);
        //searchButton.setPreferredSize(new java.awt.Dimension(75, 25));

        localPathField.setText(System.getProperty("user.home"));
        localPathField.setPreferredSize(new java.awt.Dimension(69, 24));

        browseButton2.setText(loc.lc("Browse"));
        //browseButton2.setPreferredSize(new java.awt.Dimension(75, 25));
        browseButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButton2ActionPerformed(evt);
            }
        });

        step2Desc3.setFont(step2Desc3.getFont().deriveFont(step2Desc3.getFont().getStyle() & ~java.awt.Font.BOLD));
        step2Desc3.setText(loc.lc("Specify the local folder to checkout folders into."));

        revisionFieldDesc.setFont(revisionFieldDesc.getFont().deriveFont(revisionFieldDesc.getFont().getStyle() & ~java.awt.Font.BOLD, revisionFieldDesc.getFont().getSize()-1));
        revisionFieldDesc.setText(loc.lc("(empty means repository HEAD)"));

        org.jdesktop.layout.GroupLayout step2CenterPanelLayout = new org.jdesktop.layout.GroupLayout(step2CenterPanel);
        step2CenterPanel.setLayout(step2CenterPanelLayout);
        step2CenterPanelLayout.setHorizontalGroup(
            step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step2CenterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(step2CenterPanelLayout.createSequentialGroup()
                        .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(step2Desc2)
                            .add(step2CenterPanelLayout.createSequentialGroup()
                                .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(repositoryPathLabel)
                                    .add(revisionLabel)
                                    .add(localPathLabel))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(step2CenterPanelLayout.createSequentialGroup()
                                            .add(revisionField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                            .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(repositoryPathField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                                        .add(revisionFieldDesc))
                                    .add(step2CenterPanelLayout.createSequentialGroup()
                                        .add(localPathField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                                        .add(3, 3, 3)))))
                        .add(9, 9, 9)
                        .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(browseButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .add(browseButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                    .add(step2Desc3))
                .addContainerGap())
        );
        step2CenterPanelLayout.setVerticalGroup(
            step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step2CenterPanelLayout.createSequentialGroup()
                .add(step2Desc2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(repositoryPathLabel)
                    .add(repositoryPathField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browseButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(revisionLabel)
                    .add(revisionField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(revisionFieldDesc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 63, Short.MAX_VALUE)
                .add(step2Desc3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step2CenterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(localPathLabel)
                    .add(browseButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(localPathField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        helpButton2.setText(loc.lc("Help"));
        //helpButton2.setPreferredSize(new java.awt.Dimension(75, 25));
        helpButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButton2ActionPerformed(evt);
            }
        });

        cancelButton2.setText(loc.lc("Cancel"));
        cancelButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton1ActionPerformed(evt);
            }
        });

        finishButton2.setText(loc.lc("Finish"));
        //finishButton2.setPreferredSize(new java.awt.Dimension(75, 25));
        finishButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButton2ActionPerformed(evt);
            }
        });

        nextButton2.setText(loc.lc("Next"));
        nextButton2.setEnabled(false);
        //nextButton2.setPreferredSize(new java.awt.Dimension(75, 25));

        backButton2.setText(loc.lc("Back"));
        //backButton2.setPreferredSize(new java.awt.Dimension(75, 25));
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout step2BottomPanelLayout = new org.jdesktop.layout.GroupLayout(step2BottomPanel);
        step2BottomPanel.setLayout(step2BottomPanelLayout);
        step2BottomPanelLayout.setHorizontalGroup(
            step2BottomPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, step2BottomPanelLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .add(backButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nextButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(finishButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancelButton2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(helpButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        step2BottomPanelLayout.setVerticalGroup(
            step2BottomPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step2BottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step2BottomPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(helpButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cancelButton2)
                    .add(finishButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nextButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(backButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout step2Layout = new org.jdesktop.layout.GroupLayout(step2);
        step2.setLayout(step2Layout);
        step2Layout.setHorizontalGroup(
            step2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(step2BottomPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(step2TopPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(step2CenterPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        step2Layout.setVerticalGroup(
            step2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, step2Layout.createSequentialGroup()
                .add(step2TopPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step2CenterPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(step2BottomPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
      
        
        getContentPane().add(step2, "step2card");
        
        pack();
    }// </editor-fold>

    
/**
 * Tests connection to the repository.
 */
private void nextButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
	
	nextButton1.setEnabled(false);
	String url = (String)urlBox.getSelectedItem();
	String user = usernameField.getText();
	String password = new String(passwordField.getPassword());
	openTask = new OpenRepositoryTask(url, user, password, this);
	openTask.execute();
}                                           

private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
// TODO add your handling code here:
}                                           

private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
	java.awt.CardLayout cl = (java.awt.CardLayout)
	(getContentPane().getLayout());
	
	cl.show(getContentPane(), "step1card");
	getRootPane().setDefaultButton(nextButton1);
}                                           

private void helpButton2ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
}


/**
 * checkout a project from the repository.
 */
private void finishButton2ActionPerformed(java.awt.event.ActionEvent evt) {
	
	Pattern p = Pattern.compile("/");
	String[] items = p.split(repositoryPathField.getText());

	String folderName = items[items.length - 1];

//System.out.println(svnPackage.getRootPath() + repositoryPathField.getText() + "--" + localPathField.getText() + 
System.getProperty("file.separator" + folderName);
	CheckoutEvent dial = new CheckoutEvent(this, null, true, svnPackage, svnPackage.getRootPath() +
			repositoryPathField.getText(), localPathField.getText() + 
			System.getProperty("file.separator") + folderName);
	
	isCancelled = dial.isCancelled();
	this.setVisible(false);
	
}

/**
 * shows a dialog which enables user to browse SVN repository tree.
 */
private void browseButton1ActionPerformed(java.awt.event.ActionEvent evt) {
	
	tree = new SVNDirSelector(null, true,
			svnPackage, repositoryPathField.getText());
	tree.setLocationRelativeTo(this);
	tree.setVisible(true);
	repositoryPathField.setText(tree.getSelectedPath());
}

/**
 * shows a filechooser dialog which enables user to select a local folder for
 * checkout.
 */
private void browseButton2ActionPerformed(java.awt.event.ActionEvent evt) {
	 
	JFileChooser chooser = new JFileChooser();
	 chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	 chooser.setMultiSelectionEnabled(false);
	 int returnVal = chooser.showOpenDialog(this);
	    if(returnVal == JFileChooser.APPROVE_OPTION) {
	       
	           localPathField.setText(chooser.getSelectedFile().
	        		    getPath());
	    }

}

private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {
	openTask.cancel(true);
}

private void helpButton1ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
}

private void cancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {
	isCancelled = true;
	this.setVisible(false);
}

/**
 * changes text of description label 
 */
private void urlBoxItemStateChanged(java.awt.event.ItemEvent evt) {
	
	String url = (String)urlBox.getSelectedItem();
	
	if (url.equals("http://")) {
		accessDescLabel.setText("http://" + loc.lc("hostname/repository_path"));
	}
	if (url.equals("svn://")) {
		accessDescLabel.setText("svn://" + loc.lc("hostname/repository_path"));
	}
	if (url.equals("file:///")) {
		accessDescLabel.setText("file:///" + loc.lc("repository_path"));
	}
	if (url.equals("svn+ssh://")) {
		accessDescLabel.setText("svn+ssh://" + loc.lc("hostname/repository_path"));
	}
	if (url.equals("https://")) {
		accessDescLabel.setText("https://" + loc.lc("hostname/repository_path"));
	}
}

public void keyPressed(KeyEvent arg0) {
	// TODO Auto-generated method stub
	
}

public void keyReleased(KeyEvent arg0) {
	// TODO Auto-generated method stub
	
}

/**
 * Changes the text of access label. 
 */
public void keyTyped(KeyEvent arg0) {
	String url = (String)urlBox.getEditor().getItem();
	Pattern p = Pattern.compile("//");
	String[] items = p.split(url);
	if (items[0].equals("http:")) {
		accessDescLabel.setText("http://" + loc.lc("hostname/repository_path"));
	}
	if (items[0].equals("svn:")) {
		accessDescLabel.setText("svn://" + loc.lc("hostname/repository_path"));
	}
	if (items[0].equals("file:")) {
		accessDescLabel.setText("file:///" + loc.lc("repository_path"));
	}
	if (items[0].equals("svn+ssh:")) {
		accessDescLabel.setText("svn+ssh://" + loc.lc("hostname/repository_path"));
	}
	if (items[0].equals("https:")) {
		accessDescLabel.setText("https://" + loc.lc("hostname/repository_path"));
	}
	
}
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SVNCheckoutWizard dialog = new SVNCheckoutWizard(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /**
     * Returns a path to checked folder.
     */
    public String getCheckedFolder() {

        if (isCancelled) 
        	return null;
        
        Pattern p = Pattern.compile("/");
        String[] items = p.split(repositoryPathField.getText());
        String folderName = items[items.length - 1];
        return localPathField.getText() + 
        System.getProperty("file.separator") + folderName;

	}
    
    private void copyItemActionPerformed(java.awt.event.ActionEvent evt) {
    	popupListener.setClipboardContents(editorcomp.getSelectedText());
    }
    
    private void pasteItemActionPerformed(java.awt.event.ActionEvent evt) {
    	
    	editorcomp.replaceSelection(popupListener.getClipboardContents());
    	this.keyTyped(null);
    	
    }
    
    private void selectAllItemActionPerformed(java.awt.event.ActionEvent evt) {
    	
    	editorcomp.selectAll();
    	
    }
    
    /**
	 * a worker thread that opens a connection to the SVN
	 * repository.
	 */
	class OpenRepositoryTask extends SwingWorker<Void, Void> {

		private String svnExceptionMessage; 
		private int exception = 0;
		private String url;
		private String username;
		private String password;
		private javax.swing.JDialog parent;

		public OpenRepositoryTask(String url, String username, 
				String password, javax.swing.JDialog parent) {
			this.url = url;
			this.username = username;
			this.password = password;
			this.parent = parent;
		}

		
		protected Void doInBackground() {
			jProgressBar1.setVisible(true);
			jProgressBar1.setIndeterminate(true);
			stopButton.setVisible(true);
			connectionDesc.setVisible(true);
			try {
				svnPackage.openRepository(url, username, password, null, 
						new AuthenticationProvider(username, password, parent));
			} catch(Exception e) {
				svnExceptionMessage = e.getMessage();
				exception = 1;
			}
			return null;
		}

		protected void done() {

			jProgressBar1.setVisible(false);
			jProgressBar1.setIndeterminate(false);
			stopButton.setVisible(false);
			connectionDesc.setVisible(false);
			nextButton1.setEnabled(true);
			
			//exception occured. show error dialog to the user.
			if (exception == 1 || isCancelled()) {

				if (isCancelled()) {
					svnExceptionMessage = loc.lc("action cancelled by user");
				}
				
				javax.swing.JOptionPane.showMessageDialog(step1,
						svnExceptionMessage,
						loc.lc("SVN command failed"),
						javax.swing.JOptionPane.ERROR_MESSAGE);
			}
			else {
				backButton1.setEnabled(true);
				getRootPane().setDefaultButton(finishButton2);
				java.awt.CardLayout cl = (java.awt.CardLayout)
				(getContentPane().getLayout());
				repositoryPathField.setText(svnPackage.getSvnPath());
				cl.show(getContentPane(), "step2card");
			}
		}

	}
	
	 
	
	/**
	 * Bring up a popup menu.
	 * @author lparikka
	 */
	class PopupListener extends java.awt.event.MouseAdapter
			implements java.awt.datatransfer.ClipboardOwner {
	    

		public void mousePressed(java.awt.event.MouseEvent e) {
			if (e.isPopupTrigger())
				maybeShowPopup(e);
			else if (popup.isVisible())
				popup.setVisible(false);
			
	    }

	    public void mouseReleased(java.awt.event.MouseEvent e) {
	    	maybeShowPopup(e);
	    }

	    private void maybeShowPopup(java.awt.event.MouseEvent e) {
	        if (e.isPopupTrigger()) {
	        	 
	        	 if (editorcomp.getSelectedText() == null)
	        	 	copyItem.setEnabled(false);
	        	 else
	        		copyItem.setEnabled(true);
	        	 		
	             popup.show(e.getComponent(),
	                       e.getX(), e.getY());
	        }
	       
	       
	    }
	    
	    /**
		  * Place a String on the clipboard.
		  */
		  public void setClipboardContents( String aString ){
			  
			  java.awt.datatransfer.StringSelection stringSelection = new java.awt.datatransfer.StringSelection( aString );
			  java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
			  clipboard.setContents( stringSelection, this );
		  }

		 /**
	     * Get the String residing on the clipboard.
	     *
	     * @return any text found on the Clipboard; if none found, return an
	     * empty String.
	     */
	    public String getClipboardContents() {
	    	String result = "";
	    	java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
	    	//odd: the Object param of getContents is not currently used
	    	java.awt.datatransfer.Transferable contents = clipboard.getContents(null);
	    	boolean hasTransferableText =
	    		(contents != null) &&
	    		contents.isDataFlavorSupported(java.awt.datatransfer.DataFlavor.stringFlavor)
	    		;
	    	if ( hasTransferableText ) {
	    		try {
	    			result = (String)contents.getTransferData(java.awt.datatransfer.DataFlavor.stringFlavor);
	    		}
	    		catch (UnsupportedFlavorException ex){

	    			//System.out.println(ex);

	    		}
	    		catch (IOException ex) {
	    			//System.out.println(ex);

	    		}
	    	}
	    	return result;
	    }

//		@Override
		public void lostOwnership(Clipboard clipboard, Transferable contents) {
			// TODO Auto-generated method stub
			
		}

	    
	}


    
    // Variables declaration - do not modify
	private javax.swing.JLabel accessDescLabel;
    private javax.swing.JButton backButton1;
    private javax.swing.JButton backButton2;
    private javax.swing.JButton browseButton1;
    private javax.swing.JButton browseButton2;
    private javax.swing.JButton cancelButton1;
    private javax.swing.JButton cancelButton2;
    private javax.swing.JLabel connectionDesc;
    private javax.swing.JButton finishButton1;
    private javax.swing.JButton finishButton2;
    private javax.swing.JButton helpButton1;
    private javax.swing.JButton helpButton2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField localPathField;
    private javax.swing.JLabel localPathLabel;
    private javax.swing.JButton nextButton1;
    private javax.swing.JButton nextButton2;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField repositoryPathField;
    private javax.swing.JLabel repositoryPathLabel;
    private javax.swing.JTextField revisionField;
    private javax.swing.JLabel revisionFieldDesc;
    private javax.swing.JLabel revisionLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel step1;
    private javax.swing.JPanel step1BottomPanel;
    private javax.swing.JPanel step1CenterPanel;
    private javax.swing.JLabel step1Desc;
    private javax.swing.JLabel step1Desc2;
    private javax.swing.JLabel step1Desc3;
    private javax.swing.JSeparator step1Separator1;
    private javax.swing.JSeparator step1Separator2;
    private javax.swing.JPanel step1TopPanel;
    private javax.swing.JPanel step2;
    private javax.swing.JPanel step2BottomPanel;
    private javax.swing.JPanel step2CenterPanel;
    private javax.swing.JLabel step2Desc;
    private javax.swing.JLabel step2Desc2;
    private javax.swing.JLabel step2Desc3;
    private javax.swing.JPanel step2TopPanel;
    private javax.swing.JButton stopButton;
    private javax.swing.JComboBox urlBox;
    private javax.swing.JLabel urlLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField editorcomp;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JMenuItem copyItem;
    private javax.swing.JMenuItem pasteItem;
    private javax.swing.JMenuItem selectAllItem;
    private PopupListener popupListener;
    // End of variables declaration
}

//Reviewed by mkupsu 29.11.8
